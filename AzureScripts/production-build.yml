# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

# specific branch build with batching
trigger:
  batch: false
  branches:
    include:
    - main

variables:
  - group: PipelineVariables

stages:
  # - stage: ios_stage
  #   displayName: Ios stage
  #   pool:
  #     vmImage: macOS-13
  #   jobs:
  #     - job: ios_job
  #       displayName: Ios job
  #       steps:
  #         - template: setup_template.yml
  #         - task: InstallAppleProvisioningProfile@1
  #           inputs:
  #             provisioningProfileLocation: 'secureFiles'
  #             provProfileSecureFile: appalchemy.mobileprovision
          
  #         - task: InstallAppleCertificate@2
  #           inputs:
  #             certSecureFile: distribution.p12
  #             keychain: 'temp' 
  #             certPwd: $(ios_distribution_password)

  #         - task: Bash@3
  #           displayName: Build iOS MAUI app
  #           inputs:
  #             targetType: 'inline'
  #             script: |
  #               dotnet publish MAUITestApp/MAUITestApp.csproj -f net9.0-ios -c Release --output '$(Build.ArtifactStagingDirectory)/IOS' -p:ArchiveOnBuild=true -p:RuntimeIdentifier=ios-arm64 -p:CodesignKey="$(codesign_key)" -p:CodesignProvision="$(codesign_provision)"

  #         - task: PublishBuildArtifacts@1
  #           displayName: 'Publish IOS app to artifacts' 
  #           inputs:
  #             PathtoPublish: '$(Build.ArtifactStagingDirectory)/ios'
  #             ArtifactName: 'ios'

  - stage: windows_android_stage
    displayName: Windows and Android stages
    pool:
      vmImage: windows-latest
    jobs:
      - job: windows_job
        displayName: Windows job
        steps:
        - template: setup_template.yml

        - task: Bash@3
          displayName: Build Windows MAUI app
          inputs:
            targetType: 'inline'
            script: |
              dotnet publish MAUITestApp/MAUITestApp.csproj -f net9.0-windows10.0.19041.0 -c Release --output '$(Build.ArtifactStagingDirectory)/Windows'

        - task: PublishBuildArtifacts@1
          displayName: 'Publish Windows app to artifacts' 
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)/windows'
            ArtifactName: 'Windows'

      - job: android_job
        dependsOn:
          - windows_job
        displayName: Android job
        steps:
        - template: setup_template.yml

        - task: DownloadSecureFile@1
          name: keystore_file
          displayName: Download Keystore File
          inputs:
            secureFile: 'myapp.keystore'

        - task: CopyFiles@2
          name: copy_keystore_file
          displayName: Import Secure File
          inputs:
            SourceFolder: $(Agent.TempDirectory)
            Contents: 'myapp.keystore'
            TargetFolder: MAUITestApp

        - task: Bash@3
          displayName: Build Android MAUI app
          inputs:
            targetType: 'inline'
            script: |
                  dotnet publish MAUITestApp/MAUITestApp.csproj -f net9.0-android -c Release --output '$(Build.ArtifactStagingDirectory)/Android' -p:AndroidKeyStore=true -p:AndroidSigningKeyStore=myapp.keystore -p:AndroidSigningKeyAlias=myapp -p:AndroidSigningKeyPass=$(keystore_password) -p:AndroidSigningStorePass=$(keystore_password)

        - task: PublishBuildArtifacts@1
          displayName: 'Publish Android app to artifacts' 
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)/android'
            ArtifactName: 'Android'